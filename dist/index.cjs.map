{"version":3,"file":"index.cjs","sources":["../src/utils.ts","../src/lib.ts","../src/index.ts"],"sourcesContent":["export function formatDate(date: Date): string {\n\treturn date.toLocaleDateString('en-US');\n}\n\nexport function dateAsInteger(dateString: string): number {\n\treturn parseInt(dateString.split('/')[1]);\n}\n","import { StreakCounter } from './types';\nimport { dateAsInteger, formatDate } from './utils';\n\nconst KEY = 'streak'; // for storing in localStorage\n\nexport function initCounter(storage: Storage) {\n\tconst today = new Date();\n\n\tconst streak = {\n\t\tstorage: storage,\n\t\tstartDate: formatDate(today),\n\t\tlastLogin: formatDate(today),\n\t\tcount: 0,\n\t};\n\n\tstorage.setItem(KEY, JSON.stringify(streak));\n\n\treturn streak;\n}\n\nexport function getCounter(storage: Storage): StreakCounter | null {\n\tconst data = storage.getItem(KEY);\n\n\ttry {\n\t\t// @ts-ignore\n\t\tconst streak = JSON.parse(data);\n\n\t\tif (streak === '') {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn streak;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn null;\n\t}\n}\n\nexport function incrementCounter(storage: Storage) {\n\ttry {\n\t\tconst streak = JSON.parse(storage.getItem(KEY) || '');\n\t\tconst today = formatDate(new Date());\n\t\tconst dateDifference = dateAsInteger(today) - dateAsInteger(streak.lastLogin);\n\n\t\tif (dateDifference === 1) {\n\t\t\tstreak.count += 1;\n\t\t\tstorage.setItem(KEY, JSON.stringify(streak));\n\t\t} else if (dateDifference === 1) {\n\t\t\tconsole.warn('Streak already incremented today');\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('No streak to increment');\n\t}\n}\n\nexport function resetCounter(storage: Storage) {\n\ttry {\n\t\tconst streak = JSON.parse(storage.getItem(KEY) || '');\n\t\tconst today = formatDate(new Date());\n\t\tconst dateDifference = dateAsInteger(today) - dateAsInteger(streak.lastLogin);\n\n\t\tif (dateDifference > 1) {\n\t\t\tconst newStreak = initCounter(storage);\n\t\t\tstorage.setItem(KEY, JSON.stringify(newStreak));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('No streak to reset, maybe you want to initialise a new one?');\n\t}\n}\n\nexport function overrideStreak(storage: Storage, overrides: Partial<StreakCounter>) {\n\tconst streak = getCounter(storage);\n\n\tif (streak) {\n\t\tconst newStreak = {\n\t\t\t...streak,\n\t\t\t...overrides,\n\t\t};\n\n\t\tstorage.setItem(KEY, JSON.stringify(newStreak));\n\t} else {\n\t\tconsole.error('No streak to override');\n\t}\n}\n","import { StreakCounter } from './types';\nimport { getCounter, incrementCounter, initCounter, resetCounter } from './lib';\n\nexport function getDailyStreak(): StreakCounter {\n\tlet storage = localStorage;\n\tlet streak = getCounter(storage);\n\n\tif (streak) {\n\t\ttry {\n\t\t\tincrementCounter(storage);\n\t\t} catch {\n\t\t\tresetCounter(storage);\n\t\t}\n\t} else {\n\t\tstreak = initCounter(storage);\n\t}\n\n\treturn streak;\n}\n"],"names":["formatDate","date","toLocaleDateString","dateAsInteger","dateString","split","KEY","initCounter","storage","today","Date","streak","startDate","lastLogin","count","setItem","JSON","stringify","getDailyStreak","localStorage","getItem","parse","data","error","console","getCounter","dateDifference","warn","incrementCounter","_unused","newStreak","resetCounter"],"mappings":"AAAgBA,SAAAA,EAAWC,GAC1B,OAAWA,EAACC,mBAAmB,SAG1B,SAAAC,EAAwBC,GAC7B,gBAAgBA,EAAWC,MAAM,KAAK,ICFvC,IAASC,EAAG,kBAENC,EAAsBC,GAC3B,IAAWC,EAAG,IAAIC,KAEZC,EAAS,CACdH,QAASA,EACTI,UAAWZ,EAAWS,GACtBI,UAAWb,EAAWS,GACtBK,MAAO,GAKR,OAFAN,EAAQO,QAAQT,EAAKU,KAAKC,UAAUN,IAGpCA,yBCfeO,WACf,IAAWV,EAAGW,aACVR,EDeC,SAAqBH,GAC1B,MAAaA,EAAQY,QAAQd,GAE7B,IAEC,MAAeU,KAAKK,MAAMC,GAE1B,MAAe,KAAXX,EACI,KAGDA,EACN,MAAOY,GAER,OADAC,QAAQD,MAAMA,GAEd,MC9BYE,CAAWjB,GAExB,GAAIG,EACH,KD8BI,SAA2BH,GAChC,IACC,IAAMG,EAASK,KAAKK,MAAMb,EAAQY,QAAQd,IAAQ,IAE9BoB,EAAGvB,EADTH,EAAW,WACqBG,EAAcQ,EAAOE,WAE5C,IAAnBa,GACHf,EAAOG,OAAS,EAChBN,EAAQO,QAAQT,EAAKU,KAAKC,UAAUN,KACP,IAAnBe,GACVF,QAAQG,KAAK,oCAEb,MAAOJ,GACRC,QAAQD,MAAM,2BC1CbK,CAAiBpB,GAChB,MAAMqB,aD6CmBrB,GAC5B,IACC,IAAYG,EAAGK,KAAKK,MAAMb,EAAQY,QAAQd,IAAQ,IAIlD,GAFuBH,EADTH,EAAW,IAAIU,OACiBP,EAAcQ,EAAOE,WAE9C,EAAG,CACvB,IAAeiB,EAAGvB,EAAYC,GAC9BA,EAAQO,QAAQT,EAAKU,KAAKC,UAAUa,KAEpC,MAAOP,GACRC,QAAQD,MAAM,gECvDbQ,CAAavB,QAGdG,EAASJ,EAAYC,GAGtB,OACAG"}